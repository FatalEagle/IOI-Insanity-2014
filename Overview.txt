=~=~=~=~=~=~=~=~=~=~=~=~=~=~= Miruka =~=~=~=~=~=~=~=~=~=~=~=~=~=~=
Miruka likes numbers. She especially likes numbers whose digits have a nondecreasing subsequence of length 6. Please help her count the number of numbers in range [A, B] whose digits contain a nondecreasing subsequence of length 6. 1<=A<=B<1018 At least 30% of test cases will have N < 106 Sample Input 111111 111131 Sample Output 17

===> Solution
Exponential DP


=~=~=~=~=~=~=~=~=~=~=~=~=~=~= Balance =~=~=~=~=~=~=~=~=~=~=~=~=~=~=
Balance a chemical equation, with relatively high bounds.

===> Solution
Integer Linear Programming


=~=~=~=~=~=~=~=~=~=~=~=~=~=~= Power =~=~=~=~=~=~=~=~=~=~=~=~=~=~=
You are the new manager of a power plant. You realize that the company is losing money because it is forced to keep power levels high even when most of the houses are not using the power. Therefore, you decide to make a reform. You will select a subset of houses to maximize your profit. There is a catch: if you select a house, you must also provide power to some other houses connected to it which are linked by wires that travel in one direction. Each house has a maximum voltage use. You must provide at least enough power to satisfy this value of all houses you choose to provide to. Each house also has an integer which is the expected profit. Write a program to determine the maximum profit you can gain.

cost of producing power = A * max_voltage
N houses, M wires
1 <= N <= 100
1 <= M <= 400
1 <= v_i <= 10^9

===> Solution
BFS to determine which houses can't receive power no matter what (no connection to power plant), then you binary search on the amount of power to produce. now with this new graph, you run a maximum flow on it. you connect supersource with all houses with + money, and all houses with - money to supersink. take the maximum flow,  subtract this value from the sum of all the positive values, and that's your profit

